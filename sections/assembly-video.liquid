{% if product.metafields.assembly_video_link.video_link != blank or product.metafields.assembly_video.video %}
  {%- if section.index > 2 -%}
    <link rel="stylesheet" href="{{ 'media-with-text.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- else -%}
    {{ 'media-with-text.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- liquid
    # constants
    assign gutter_sm = 20

    assign media_type = 'image'
    assign image = product.metafields.assembly_vid_thimb.thumnail.value

    if product.metafields.assembly_video_link.video_link != blank or product.metafields.assembly_video.video != blank
      assign media_type = 'video'
      assign using_video_tag = false
      assign autoplay = section.settings.video_autoplay

      if product.metafields.assembly_video.video != blank
        assign using_video_tag = true

        if image == blank
          assign image = product.metafields.assembly_video.video.preview_image
        endif
      endif
    endif
  -%}

  {%- if media_type == 'video' -%}
    {{ 'video.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'video.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- liquid
    assign color_scheme = section.settings.color_scheme
    assign bg_color = false

    if color_scheme == '1'
      assign bg_color = settings.color_scheme_1_bg
    elsif color_scheme == '2'
      assign bg_color = settings.color_scheme_2_bg
    elsif color_scheme == '3'
      assign bg_color = settings.color_scheme_3_bg
    endif

    if bg_color == settings.bg_color or bg_color == 'rgba(0,0,0,0)'
      assign bg_color = false
    endif

    assign quality = settings.image_quality
    if section.settings.image_fit == 'cover'
      assign quality = 1.4
    endif
  -%}

  {%- capture video_component -%}
  <video-component class="{% if using_video_tag %}has-video{% else %}has-iframe{% endif %} absolute top-0 left-0 w-full h-full"
                   {%- unless using_video_tag %}data-video-url="{{ product.metafields.assembly_video_link.video_link.value | escape }}" {% endunless -%}
                   data-video-id="{{ section.id }}"
                   data-autoplay="{% if autoplay %}true{% else %}false{% endif %}"
                   data-background="false"
                   data-natural-width="true"
                   data-description="{{ section.settings.video_description | escape }}">
    {%- if using_video_tag -%}
      {{ product.metafields.assembly_video.video.value | video_tag: playsinline: true, autoplay: autoplay, muted: autoplay, controls: true, poster: '' | replace: '<img ', '<img loading="lazy" hidden ' }}

    {%- endif -%}
  </video-component>
{%- endcapture -%}

  <div
    class="section section-media-with-text section--full-width section--padded {% if section.settings.enable_vertical_spacing %}vertical-padding{% endif %}  {% unless color_scheme == 'none' or section.settings.only_content_color_scheme %} color-scheme color-scheme--{{ color_scheme }}{% endunless %}"
    id="product-video"
  >
    <div class="container">
      <div
        class="media-with-text design {% if section.settings.layout == 'right' %} media-with-text--reverse{% endif %}"
        {% if settings.animations_enabled != 'disabled' %}
          data-cc-animate
        {% endif %}
        style="--media-width: {{ section.settings.media_width }}%"
      >
        <div
          class="media-with-text__media{% if media_type == 'video' %} video-section{% endif %} relative flex flex-col justify-center overflow-hidden"
          style="--media-scale: {{ section.settings.media_scale | times: 0.01 }}"
        >
          <div
            class="media w-full{% if media_type == 'video' %} absolute{% if section.settings.image_fit == "cover" %} top-0 left-0 h-full{% else %} video-section__media{% endif %} video-played-hidden{% else %} relative{% if section.settings.image_fit == "cover" %} h-full video-section__media--cover{% endif %}{% endif %}"
            {% if media_type == 'image' and image != blank %}
              style="padding-top: {{ 1 | divided_by: image.aspect_ratio | times: 100 }}%;"
            {% endif %}
          >
            {%- if image != blank -%}
              {%- capture sizes_md %}calc((50vw - {{ gutter_sm | times: 2 }}px) + 9px){% endcapture -%}
              {%- capture sizes -%}
              {%- render 'sizes-attribute', min: 'page', sm: 'page', md: sizes_md, lg: '536px', xl: false, max: false -%}
            {%- endcapture -%}
              {% render 'image',
                image: image,
                quality: quality,
                widths: '536, 800, 1072, 1280',
                mobile_widths: '690, 800',
                src_width: 536,
                sizes: sizes,
                section_index: section.index,
                class: 'img-fit'
              %}
            {%- elsif media_type == 'image' -%}
              {{ 'image' | placeholder_svg_tag: 'media__placeholder dark' }}
            {%- endif -%}
          </div>

          {%- if media_type == 'video' -%}
            {%- if section.settings.video_autoplay -%}
              <deferred-media class="video-section__media{% if section.settings.image_fit == "contain" %} relative{% endif %} block w-full no-js-hidden">
                <template>{{ video_component }}</template>
              </deferred-media>

              <noscript>
                <div class="video-section__media block w-full">
                  {{ video_component }}
                </div>
              </noscript>
            {%- else -%}
              <deferred-media class="video-section__media{% if section.settings.image_fit == "contain" %} relative{% endif %} height-clip block w-full no-js-hidden">
                <button
                  type="button"
                  class="video-section__play-btn video-played-hidden absolute top-0 left-0 flex justify-center items-center w-full h-full js-load-media"
                >
                  <span class="visually-hidden">{{ 'general.icon_labels.play' | t }}</span>
                  {%- render 'icon-play' -%}
                </button>
                <template>
                  {{ video_component }}
                </template>
              </deferred-media>
            {%- endif -%}
          {%- endif -%}
        </div>

        <div
          class="media-with-text__text{% if section.settings.only_content_color_scheme and color_scheme != 'none' %} color-scheme color-scheme--{{ color_scheme }}{% elsif section.settings.image_fit == "cover" %} md:mt-14 md:mb-14{% endif %} flex flex-col justify-center {% if section.settings.layout == 'right' %} mie-auto{% endif %}"
          {% if settings.animations_enabled != 'disabled' %}
            data-cc-animate
          {% endif %}
        >
          <div class="{{ section.settings.text_align }}">
            {%- if product.metafields.assemble_main.heading != blank -%}
              <h2
                class="section__block section__block--heading h4"
              >
                {% render 'multiline-text' with product.metafields.assemble_main.heading.value %}
              </h2>
            {%- endif -%}

            {%- if product.metafields.assembly_detail.detail != blank -%}
              <div
                class="section__block reading-width rte"
              >
                {{ product.metafields.assembly_detail.detail | metafield_tag }}
              </div>
            {%- endif -%}

            {%- if section.settings.button_label != blank -%}
              <div class="section__block section__block--button">
                <a
                  class="btn btn--secondary"
                  role="link"
                >
                  {% render 'video-btn-icon' %}
                  {{- section.settings.button_label | escape -}}
                </a>
              </div>
            {%- endif -%}
          </div>
        </div>
      </div>
    </div>
  </div>
{% endif %}
{% schema %}
{
  "name": "Assembly Video",
  "class": "cc-media-with-text",
  "settings": [
    {
      "type":"checkbox",
      "id":"enable_vertical_spacing",
      "label":"Add More Vertical Spacing"
    },

    {
      "type": "checkbox",
      "id": "video_autoplay",
      "label": "Autoplay",
      "info": "Some devices will not autoplay videos under certain circumstances. In accordance with Google's guidelines, autoplaying videos will be muted. [Learn more](https://cleancanvas.co.uk/support/enterprise/using-videos)",
      "default": false
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Media position on large screens",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "image_fit",
      "label": "Media fit on large screens",
      "info": "Choose \"Natural\" to avoid cropping the media or \"Cover\" to fill available space (media may be cropped).",
      "options": [
        {
          "value": "contain",
          "label": "Natural"
        },
        {
          "value": "cover",
          "label": "Cover"
        }
      ],
      "default": "contain"
    },
    {
      "type": "range",
      "id": "media_width",
      "min": 40,
      "max": 60,
      "step": 1,
      "unit": "%",
      "label": "Media width on large screens",
      "default": 50
    },
    {
      "type": "range",
      "id": "media_scale",
      "min": 40,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Media scale on large screens",
      "default": 100
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text alignment",
      "options": [
        {
          "value": "text-start",
          "label": "Left"
        },
        {
          "value": "text-center",
          "label": "Center"
        },
        {
          "value": "text-end",
          "label": "Right"
        }
      ],
      "default": "text-start"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "none",
          "label": "Default"
        },
        {
          "value": "1",
          "label": "Scheme 1"
        },
        {
          "value": "2",
          "label": "Scheme 2"
        },
        {
          "value": "3",
          "label": "Scheme 3"
        }
      ],
      "default": "none"
    },
    {
      "type": "text",
      "id":"button_label",
      "label":"Section Button Label"
    },
    {
      "type": "checkbox",
      "id": "only_content_color_scheme",
      "label": "Apply color scheme only to the content"
    }
  ],
  "presets": [
    {
      "name": "Assembly Video",
    }
  ],
  "disabled_on": {
    "groups": [
      "header",
      "footer",
      "aside"
    ]
  }
}
{% endschema %}
